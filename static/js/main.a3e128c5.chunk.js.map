{"version":3,"sources":["api/api.ts","Table/Table.tsx","AddForm/AddForm.tsx","Header/Header.tsx","App.tsx","index.tsx"],"names":["BASE_URL","requestBooks","fetch","then","response","ok","Error","status","statusText","json","columns","field","headerName","width","editable","type","description","sortable","valueGetter","params","row","category","Table","props","books","useState","selectionModel","setSelectionModel","rows","style","height","Button","variant","onClick","id","console","log","method","pageSize","rowsPerPageOptions","checkboxSelection","onSelectionModelChange","newSelectionModel","AddForm","newId","setNewId","newTitle","setNewTitle","newAuthor","setNewAuthor","newCategory","setNewCathegory","newISBN","setNewISBN","newYear","setNewYear","history","useNavigate","getNewId","a","booksList","arr","map","b","Math","max","hanndleChange","e","target","name","value","hanndleSubmit","data","title","author","ISBN","year","headers","body","JSON","stringify","res","result","catch","err","useEffect","Box","component","sx","m","noValidate","autoComplete","onSubmit","TextField","required","label","onChange","InputLabelProps","shrink","helperText","Header","AppBar","position","Container","maxWidth","Toolbar","disableGutters","flexGrow","display","xs","md","Link","to","my","color","App","setBooks","loadData","CssBaseline","path","element","cangeBooks","filter","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3e128c5.chunk.js","sourcesContent":["/* eslint-disable no-console */\nconst BASE_URL = 'http://localhost:3004/books';\n\nexport const requestBooks = () => {\n  return fetch(BASE_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const addBook = (data: Book) => {\n  return fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  })\n    .then(res => res.json())\n    .then(result => console.log(result))\n    .catch(err => console.log(err));\n};\n\nexport const deleteBook = (id: number) => {\n  return fetch(`${BASE_URL}/${id}`, {\n    method: 'DELETE',\n  });\n};\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport {\n  DataGrid, GridColDef, GridValueGetterParams, GridSelectionModel,\n} from '@mui/x-data-grid';\nimport { useState } from 'react';\nimport { deleteBook } from '../api/api';\n\nconst columns: GridColDef[] = [\n  { field: 'id', headerName: 'ID', width: 90 },\n  {\n    field: 'title',\n    headerName: 'Title',\n    width: 150,\n    editable: false,\n  },\n  {\n    field: 'author',\n    headerName: 'Author',\n    width: 150,\n    editable: false,\n  },\n  {\n    field: 'ISBN',\n    headerName: 'ISBN',\n    type: 'number',\n    width: 160,\n    editable: false,\n  },\n  {\n    field: 'category',\n    headerName: 'Category',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 180,\n    valueGetter: (params: GridValueGetterParams) => params.row.category,\n  },\n];\n\ntype Props = {\n  books: Book[];\n  cangeBooks: (data: Book[], id: number) => void;\n};\n\nexport const Table: React.FC<Props> = (props) => {\n  const { books } = props;\n  const [selectionModel, setSelectionModel] = useState<GridSelectionModel>([]);\n  const removeBook = () => {\n    console.log(selectionModel);\n\n    deleteBook(+selectionModel);\n  };\n\n  const rows = books;\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <h1>Tabble of my books</h1>\n      <Button variant=\"outlined\" onClick={removeBook}>\n        Remove a ithem\n      </Button>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        checkboxSelection\n        onSelectionModelChange={(newSelectionModel) => {\n          setSelectionModel(newSelectionModel);\n        }}\n        selectionModel={selectionModel}\n      />\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { addBook, requestBooks } from '../api/api';\n\nexport const AddForm: React.FC = () => {\n  const [newId, setNewId] = useState(0);\n  const [newTitle, setNewTitle] = useState('');\n  const [newAuthor, setNewAuthor] = useState('');\n  const [newCategory, setNewCathegory] = useState('');\n  const [newISBN, setNewISBN] = useState(0);\n  const [newYear, setNewYear] = useState(0);\n  // const [formErrors, setFormErrors] = useState({});\n  const history = useNavigate();\n\n  const getNewId = async () => {\n    const booksList = await requestBooks();\n    const arr = booksList.map((b: Book) => b.id);\n    const id = +Math.max(...arr) + 1;\n\n    setNewId(id);\n  };\n\n  // function minMaxLength(text: string, minLength: number, maxLength: number) {\n  //   let result = !text || text.length < minLength;\n\n  //   if (maxLength) {\n  //     result = result || text.length < minLength;\n  //   }\n\n  //   return result;\n  // }\n\n  const hanndleChange = (e: React.FormEvent<EventTarget>) => {\n    const { name, value } = e.target as HTMLInputElement;\n\n    switch (name) {\n      case 'title':\n        // if (minMaxLength(value, 2, 6)) {\n        // }\n        setNewTitle(value);\n        break;\n\n      case 'author':\n        setNewAuthor(value);\n        break;\n\n      case 'category':\n        setNewCathegory(value);\n        break;\n\n      case 'ISBN':\n        setNewISBN(+value);\n        break;\n\n      case 'year':\n        setNewYear(+value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const hanndleSubmit = async () => {\n    const newData: Book = {\n      id: newId,\n      title: newTitle,\n      author: newAuthor,\n      category: newCategory,\n      ISBN: newISBN,\n      year: newYear,\n    };\n\n    addBook(newData);\n    history('/');\n  };\n\n  useEffect(() => {\n    getNewId();\n  }, []);\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={hanndleSubmit}\n    >\n      <h1>Add a Book</h1>\n      <div>\n        <TextField\n          required\n          id=\"title\"\n          label=\"Title\"\n          name=\"title\"\n          // defaultValue={newTitle}\n          value={newTitle}\n          onChange={hanndleChange}\n        />\n        <TextField\n          required\n          id=\"author\"\n          label=\"Author\"\n          name=\"author\"\n          value={newAuthor}\n          onChange={hanndleChange}\n        />\n        <TextField\n          required\n          id=\"category\"\n          label=\"Category\"\n          name=\"category\"\n          value={newCategory}\n          onChange={hanndleChange}\n        />\n        <TextField\n          required\n          id=\"ISBN\"\n          label=\"ISBN\"\n          type=\"number\"\n          name=\"ISBN\"\n          onChange={hanndleChange}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          helperText=\"ISBN code must contain 13 numbers\"\n        />\n        <TextField\n          id=\"year\"\n          label=\"Year\"\n          name=\"year\"\n          onChange={hanndleChange}\n        />\n      </div>\n      <button type=\"submit\">Submite</button>\n    </Box>\n  );\n};\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\n\nexport const Header = () => {\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            <Button\n              component={Link}\n              to=\"/\"\n              sx={{ my: 2, color: 'white', display: 'block' }}\n            >\n              Dashboard\n            </Button>\n            <Button\n              component={Link}\n              to=\"/add\"\n              sx={{ my: 2, color: 'white', display: 'block' }}\n            >\n              Add Book\n            </Button>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.scss';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { requestBooks } from './api/api';\nimport { Table } from './Table';\nimport { AddForm } from './AddForm';\nimport { Header } from './Header';\n\nexport const App: React.FC = () => {\n  const [books, setBooks] = useState<Book[]>([]);\n\n  useEffect(() => {\n    loadData();\n  }, [books]);\n\n  const filterBooks = (data: Book[], id: number) => {\n    data.filter(item => item.id !== id);\n\n    setBooks(data);\n  };\n\n  const loadData = async () => {\n    const booksList = await requestBooks();\n\n    setBooks(booksList);\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<Table books={books} cangeBooks={filterBooks} />} />\n          <Route path=\"add\" element={<AddForm />} />\n        </Routes>\n      </Container>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}