{"version":3,"sources":["api/api.ts","Table/Table.tsx","AddForm/AddForm.tsx","Header/Header.tsx","App.tsx","index.tsx"],"names":["BASE_URL","requestBooks","fetch","then","response","ok","res","Error","status","statusText","json","columns","field","headerName","width","editable","description","sortable","valueGetter","params","row","category","Table","props","books","reload","useState","selectionModel","setSelectionModel","removeBook","a","forEach","i","id","method","rows","style","height","Button","disabled","length","variant","startIcon","onClick","pageSize","rowsPerPageOptions","checkboxSelection","onSelectionModelChange","newSelectionModel","AddForm","newId","setNewId","newTitle","setNewTitle","newAuthor","setNewAuthor","newCategory","setNewCathegory","newISBN","setNewISBN","newYear","setNewYear","title","author","ISBN","year","errors","setErrors","history","useNavigate","getNewId","booksList","arr","map","b","Math","max","validate","name","value","prev","test","Date","getFullYear","hanndleChange","e","target","isValid","data","Object","values","every","v","hanndleSubmit","preventDefault","newData","slice","headers","body","JSON","stringify","useEffect","Box","component","sx","m","autoComplete","onSubmit","TextField","required","label","onChange","error","helperText","type","InputLabelProps","shrink","Header","AppBar","position","Container","maxWidth","Toolbar","disableGutters","flexGrow","display","xs","md","Link","to","my","color","App","setBooks","loadData","CssBaseline","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.198299a2.chunk.js","sourcesContent":["const BASE_URL = 'http://localhost:3004/books';\nconst TAPICODE_URL = 'https://my-json-server.typicode.com/Nadiyahr/db-json';\n\nexport const requestBooks = () => {\n  return fetch(BASE_URL)\n    .then(response => {\n      if (!response.ok) {\n        fetch(TAPICODE_URL)\n          .then(res => {\n            if (!res.ok) {\n              throw new Error(`${res.status} - ${res.statusText}`);\n            }\n\n            return res.json();\n          });\n      }\n\n      return response.json();\n    });\n};\n\nexport const addBook = (data: Book) => {\n  return fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  })\n    .then(res => res.json());\n};\n\nexport const deleteBook = (id: number) => {\n  return fetch(`${BASE_URL}/${id}`, {\n    method: 'DELETE',\n  });\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {\n  DataGrid, GridColDef, GridValueGetterParams, GridSelectionModel,\n} from '@mui/x-data-grid';\nimport { useState } from 'react';\nimport { deleteBook } from '../api/api';\n\nconst columns: GridColDef[] = [\n  { field: 'id', headerName: 'ID', width: 90 },\n  {\n    field: 'title',\n    headerName: 'Title',\n    width: 150,\n    editable: false,\n  },\n  {\n    field: 'author',\n    headerName: 'Author',\n    width: 150,\n    editable: false,\n  },\n  {\n    field: 'ISBN',\n    headerName: 'ISBN',\n    width: 160,\n    editable: false,\n  },\n  {\n    field: 'category',\n    headerName: 'Category',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 180,\n    valueGetter: (params: GridValueGetterParams) => params.row.category,\n  },\n];\n\ntype Props = {\n  books: Book[];\n  reload: () => Promise<void>;\n};\n\nexport const Table: React.FC<Props> = (props) => {\n  const { books, reload } = props;\n  const [selectionModel, setSelectionModel] = useState<GridSelectionModel>([]);\n  const removeBook = async () => {\n    await selectionModel.forEach(i => deleteBook(+i));\n    await reload();\n  };\n\n  const rows = books;\n\n  return (\n    <div style={{ height: 420, width: '100%' }}>\n      <h1>Tabble of my books</h1>\n      <Button\n        disabled={selectionModel.length === 0}\n        variant=\"contained\"\n        startIcon={<DeleteIcon />}\n        onClick={removeBook}\n      >\n        Remove Book\n      </Button>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={6}\n        rowsPerPageOptions={[6]}\n        checkboxSelection\n        onSelectionModelChange={(newSelectionModel) => {\n          setSelectionModel(newSelectionModel);\n        }}\n        selectionModel={selectionModel}\n      />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport TextField from '@mui/material/TextField';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { addBook, requestBooks } from '../api/api';\n\ntype Props = {\n  reload: () => Promise<void>;\n};\n\nexport const AddForm: React.FC<Props> = ({ reload }) => {\n  const [newId, setNewId] = useState(0);\n  const [newTitle, setNewTitle] = useState('');\n  const [newAuthor, setNewAuthor] = useState('');\n  const [newCategory, setNewCathegory] = useState('');\n  const [newISBN, setNewISBN] = useState('');\n  const [newYear, setNewYear] = useState(0);\n  const [errors, setErrors] = useState({\n    title: '',\n    author: '',\n    category: '',\n    ISBN: '',\n    year: '',\n  });\n  const history = useNavigate();\n\n  const getNewId = async () => {\n    const booksList = await requestBooks();\n    const arr = booksList.map((b: Book) => b.id);\n    const id = +Math.max(...arr) + 1;\n\n    setNewId(id);\n  };\n\n  const validate = (name: string, value: string) => {\n    switch (name) {\n      case 'title':\n      case 'author':\n      case 'category':\n        if (value.length === 0) {\n          setErrors((prev: Errors) => ({\n            ...prev,\n            [name]: 'This field is required',\n          }));\n        } else {\n          setErrors((prev: Errors) => ({\n            ...prev,\n            [name]: '',\n          }));\n        }\n\n        break;\n\n      case 'ISBN':\n        if (value.length !== 13 && !(/^\\d$/).test(value)) {\n          setErrors((prev: Errors) => ({\n            ...prev,\n            [name]: 'ISBN must contain 13 numbers',\n          }));\n        } else {\n          setErrors((prev: Errors) => ({\n            ...prev,\n            [name]: '',\n          }));\n        }\n\n        break;\n\n      case 'year':\n        if (value && value.length !== 4 && +value > +(new Date().getFullYear())) {\n          setErrors((prev: Errors) => ({\n            ...prev,\n            [name]: 'Enter valid year',\n          }));\n        } else {\n          setErrors((prev: Errors) => ({\n            ...prev,\n            [name]: '',\n          }));\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const hanndleChange = (e: React.FormEvent<EventTarget>) => {\n    const { name, value } = e.target as HTMLInputElement;\n\n    switch (name) {\n      case 'title':\n        setNewTitle(value);\n        validate(name, value);\n        break;\n\n      case 'author':\n        setNewAuthor(value);\n        validate(name, value);\n        break;\n\n      case 'category':\n        setNewCathegory(value);\n        validate(name, value);\n        break;\n\n      case 'ISBN':\n        setNewISBN(value);\n        validate(name, value);\n        break;\n\n      case 'year':\n        setNewYear(+value);\n        validate(name, value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const isValid = (data: Errors) => {\n    return Object.values(data).every(v => v === '');\n  };\n\n  const hanndleSubmit = async (e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    if (isValid(errors)) {\n      const newData: Book = {\n        id: newId,\n        title: newTitle,\n        author: newAuthor,\n        category: newCategory,\n        ISBN: newISBN,\n        year: newYear,\n      };\n\n      if (Object.values(newData).slice(5).every(i => i !== '')) {\n        await addBook(newData);\n        reload();\n        history('/');\n      }\n    }\n  };\n\n  useEffect(() => {\n    getNewId();\n  }, []);\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      autoComplete=\"off\"\n      onSubmit={(e: React.SyntheticEvent) => hanndleSubmit(e)}\n    >\n      <h1>Add a Book</h1>\n      <div>\n        <TextField\n          required\n          id=\"title\"\n          label=\"Title\"\n          name=\"title\"\n          value={newTitle}\n          onChange={hanndleChange}\n          error={errors.title !== ''}\n          helperText={errors.title}\n        />\n        <TextField\n          required\n          id=\"author\"\n          label=\"Author\"\n          name=\"author\"\n          value={newAuthor}\n          onChange={hanndleChange}\n          error={errors.author !== ''}\n          helperText={errors.author}\n        />\n        <TextField\n          required\n          id=\"category\"\n          label=\"Category\"\n          name=\"category\"\n          value={newCategory}\n          onChange={hanndleChange}\n          error={errors.category !== ''}\n          helperText={errors.category}\n        />\n        <TextField\n          required\n          id=\"ISBN\"\n          label=\"ISBN\"\n          type=\"text\"\n          name=\"ISBN\"\n          onChange={hanndleChange}\n          error={errors.ISBN !== ''}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          helperText={errors.ISBN}\n        />\n        <TextField\n          id=\"year\"\n          label=\"Year\"\n          name=\"year\"\n          onChange={hanndleChange}\n          error={errors.year !== ''}\n          helperText={errors.year}\n        />\n      </div>\n      <Button\n        type=\"submit\"\n        disabled={!isValid(errors)}\n        variant=\"contained\"\n        startIcon={<AddIcon />}\n      >\n        Add Book\n      </Button>\n    </Box>\n  );\n};\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\n\nexport const Header = () => {\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'flex' } }}>\n            <Button\n              component={Link}\n              to=\"/\"\n              sx={{ my: 2, color: 'white', display: 'block' }}\n            >\n              Dashboard\n            </Button>\n            <Button\n              component={Link}\n              to=\"/add\"\n              sx={{ my: 2, color: 'white', display: 'block' }}\n            >\n              Add Book\n            </Button>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.scss';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { requestBooks } from './api/api';\nimport { Table } from './Table';\nimport { AddForm } from './AddForm';\nimport { Header } from './Header';\n\nexport const App: React.FC = () => {\n  const [books, setBooks] = useState<Book[]>([]);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    const booksList = await requestBooks();\n\n    setBooks(booksList);\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<Table books={books} reload={loadData} />} />\n          <Route path=\"add\" element={<AddForm reload={loadData} />} />\n        </Routes>\n      </Container>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}